// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generateForPlayground 1`] = `
{
  "predicatesCode": "import { type X } from "./types";
export function isX(root: unknown): root is X {
    if (!(typeof root === "number")) {
        return false;
    }
    (root) satisfies X;
    return true;
}
",
  "testsCode": "import { expect, describe, it } from "./vitest";
import { isX } from "./types_guards";
const invalidValue: any = Symbol("invalidValue");
const valid_X = [
    0,
    42
];
const invalid_X = [
    invalidValue
];
describe("X", () => {
    it.for(valid_X)("valid", (value: unknown) => {
        expect(isX(value)).toBe(true);
    });
    it.for(invalid_X)("invalid", (value: unknown) => {
        expect(isX(value)).toBe(false);
    });
});
",
}
`;
