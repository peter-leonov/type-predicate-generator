{
  "name": "type-predicate-generator",
  "version": "1.0.1",
  "main": "dist/index.js",
  "engines": {
    "node": ">=16"
  },
  "bin": "dist/cli.js",
  "repository": {
    "url": "https://github.com/peter-leonov/type-predicate-generator"
  },
  "scripts": {
    "test": "vitest",
    "typecheck": "tsc --noEmit",
    "check": "npm run typecheck && CI=true npm run test",
    "generate": "npm run --silent build && node dist/index.js",
    "build": "rm -rf dist && tsc && chmod +x dist/cli.js",
    "ci": "npm run build && npm run check"
  },
  "keywords": [
    "typescript",
    "predicate",
    "type safety",
    "code generator"
  ],
  "author": "Peter Leonov",
  "license": "MIT",
  "description": "TypeScript Type Predicate Generator. It generates type safe TypeScript code out of a given TypeScript type that ensures the given type structure.",
  "dependencies": {
    "command-line-args": "^6.0.1",
    "typescript": ">=5.7.0 <5.8.0"
  },
  "devDependencies": {
    "@types/command-line-args": "^5.2.3",
    "@types/node": "^22.10.1",
    "esbuild": "^0.24.2",
    "vitest": "^2.1.8"
  }
}
